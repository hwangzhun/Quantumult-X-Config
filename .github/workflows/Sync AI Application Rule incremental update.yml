name: Sync AI Application Rule 1

on:
  schedule:
    - cron:  '0 0 * * *' # 每小时执行一次
  workflow_dispatch: # 允许手动触发

jobs:
  同步规则:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Your Repository
      uses: actions/checkout@v2
      with:
        repository: 'blackmatrix7/ios_rule_script'
        path: 'source_repo'
        fetch-depth: 0 # 获取所有历史记录以比较

    - name: Checkout the target repository
      uses: actions/checkout@v2
      with:
        repository: 'hwangzhun/Quantumult-X-Config'
        path: 'target_repo'
        token: ${{ secrets.PAT }} # 需要设置一个PAT（Personal Access Token）

    - name: 同步规则
      run: |
        # 检查OpenAI规则文件是否有更新
        OPENAI_DIFF=$(git diff --name-only HEAD^ HEAD -- source_repo/rule/QuantumultX/OpenAI/OpenAI.list)
        if [ "$OPENAI_DIFF" != "" ]; then
          cp source_repo/rule/QuantumultX/OpenAI/OpenAI.list target_repo/rule/AI.list
          echo "OpenAI规则已更新。"
        fi

        # 检查Gemini规则文件是否有更新
        GEMINI_DIFF=$(git diff --name-only HEAD^ HEAD -- source_repo/rule/QuantumultX/Gemini/Gemini.list)
        if [ "$GEMINI_DIFF" != "" ]; then
          cat source_repo/rule/QuantumultX/Gemini/Gemini.list >> target_repo/rule/AI.list
          echo "Gemini规则已更新。"
        fi

        # 检查AI.list文件是否有更新
        if [ -n "$(git diff --name-only target_repo/rule/AI.list)" ]; then
          echo "AI.list有更新，准备提交更改。"
        else
          echo "AI.list没有更新，跳过提交。"
          exit 0
        fi

    - name: 提交和推送
      if: success() && github.event_name != 'pull_request'
      run: |
        cd target_repo
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add rule/AI.list
        git commit -m "从源仓库同步规则" || echo "没有需要提交的更改"
        git push 